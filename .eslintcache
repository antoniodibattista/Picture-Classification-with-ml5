[{"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/index.tsx":"1","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/reportWebVitals.ts":"2","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/App.tsx":"3","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/ContactPage.tsx":"4","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/panelHomepage/PanelHomepage.tsx":"5","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/PermanentDrawerLeft.tsx":"6","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/VideoComponent.tsx":"7"},{"size":500,"mtime":1643456161794,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1643456161794,"results":"10","hashOfConfig":"9"},{"size":478,"mtime":1643456161789,"results":"11","hashOfConfig":"9"},{"size":987,"mtime":1643456161794,"results":"12","hashOfConfig":"9"},{"size":6129,"mtime":1643456470118,"results":"13","hashOfConfig":"9"},{"size":3804,"mtime":1643456161793,"results":"14","hashOfConfig":"9"},{"size":4755,"mtime":1643456161793,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1r7bmd9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/index.tsx",[],["34","35"],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/reportWebVitals.ts",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/App.tsx",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/ContactPage.tsx",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/panelHomepage/PanelHomepage.tsx",["36"],"/**\n * ---------------------------------------------------------------------------------\n *\n * \tThis is a container component for all things appearing on the\n *  HomePage including instructions text, buttons, and the VideoComponent.\n * \n * ----------------------------------------------------------------------------------\n */\n\n\n import { useState } from 'react';\n import PermanentDrawerLeft from '../../components/PermanentDrawerLeft';\n import VideoComponent from \"../../components/VideoComponent\";\n import { Button, makeStyles, TextField } from '@material-ui/core';\n \n const useStyles = makeStyles((theme) => ({\n     root: {\n         '& > *': {\n             margin: theme.spacing(1),\n             width: '25ch',\n         },\n     },\n     content: {\n         paddingLeft: '200px',\n         paddingTop: '100px',\n         backgroundColor: 'white',\n         display: 'flex',\n         flexDirection: 'row-reverse',\n         paddingBottom: '60px'\n     },\n     buttons: {\n         marginLeft: '10px'\n     },\n     heading: {\n         fontSize: '20px'\n     },\n     text: {\n         marginLeft: '35px',\n         marginRight: '25px',\n         marginTop: '5px',\n         textAlign: 'justify',\n     },\n     epochsText: {\n paddingLeft: '440px'\n     },\n }));\n \n export default function PanelHomePage() {\n \n     const [firstLabel, setFirstLabel] = useState<string>('');\n     const [secondLabel, setSecondLabel] = useState<string>('');\n     const [disabled, setDisabled] = useState(false);\n     const [savedLabels, setSavedLabels] = useState(false);\n     const [numberOfEpochs, setNumberOfEpochs] = useState<number>(20);\n     const classes = useStyles();\n \n     const saveLabels = () => {\n         setDisabled(true);\n         setSavedLabels(true);\n         console.log(\"first label\", firstLabel);\n       };\n     \n       const resetLabels = () => {\n         setFirstLabel(\"\");\n         setSecondLabel(\"\");\n         setDisabled(false);\n         console.log(\"first label\", firstLabel);\n       };\n     \n       return (\n         <div>\n             <div className={classes.text}>\n               <p>\n                 Build and test your own image classifier using ml5.js!\n               </p>\n               <div className={classes.heading}>Instructions</div>\n               <p>\n                 <strong>Prediction Confidence:</strong> A value between 0 to 1\n                 indicating how confident our machine learning model is about its\n                 returned prediction.\n                 <br /> <br />\n                 <strong>Loss: </strong> A number indicating how poor the model's\n                 prediction was on a single test example.\n                 <br /> <br />\n                 <strong>Epochs: </strong> The number of epochs defines how many\n                 times the learning algorithm will work through the entire training\n                 data set.\n               </p>\n               <p>\n                 Select two different objects, save their labels below, and capture 3\n                 pictures of each. <br /> <br />\n                 Once you're done, click on the Train button. By \"training\", you are\n                 teaching your machine learning algorithm about which image\n                 represents which object (first or second?). Once you see a\n                 notification that the training is complete, capture another picture\n                 of one of the two items you used by clicking on the Test button. Now,\n                 see the predictions below and observe the accuracy. Every time you\n                 click on the Test button, a new picture will be captured and tested\n                 via your webcam. You can also play around with the number of epochs.\n                 If you change the default value from 20 to 1, you will observe a\n                 significant drop in the prediction confidence values. This depicts\n                 how crucial it is to set optimal parameters while building machine\n                 learning models.\n               </p>\n               <p className={classes.epochsText}>Number of Epochs:</p>\n               <form className={classes.root} noValidate autoComplete=\"off\">\n                 <TextField\n                   id=\"filled-basic\"\n                   value={firstLabel}\n                   label=\"First Label\"\n                   variant=\"filled\"\n                   onChange={(event) => {\n                     setFirstLabel(event.target.value);\n                   }}\n                   disabled={disabled}\n                 />\n                 <TextField\n                   id=\"filled-basic\"\n                   value={secondLabel}\n                   label=\"Second Label\"\n                   variant=\"filled\"\n                   onChange={(event) => {\n                     setSecondLabel(event.target.value);\n                   }}\n                   disabled={disabled}\n                 />\n                 <TextField\n                   id=\"filled-basic\"\n                   value={numberOfEpochs}\n                   variant=\"filled\"\n                   type=\"number\"\n                   inputProps={{ min: 1, max: 20, step: \"1\" }}\n                   onChange={(event) => {\n                     setNumberOfEpochs(parseInt(event.target.value));\n                   }}\n                 />\n               </form>\n               <Button\n                 variant=\"contained\"\n                 color=\"primary\"\n                 onClick={() => saveLabels()}\n               >\n                 Save Labels\n               </Button>\n               <Button\n                 className={classes.buttons}\n                 variant=\"contained\"\n                 color=\"primary\"\n                 onClick={() => resetLabels()}\n               >\n                 Reset Labels\n               </Button>\n               <br />\n             </div>\n             <div className=\"video\">\n               <VideoComponent\n                 firstLabel={savedLabels ? firstLabel : \"First\"}\n                 secondLabel={savedLabels ? secondLabel : \"Second\"}\n                 numberOfEpochs={numberOfEpochs ? numberOfEpochs : 20}\n               />\n             </div>\n         </div>\n       );\n     }\n     ","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/PermanentDrawerLeft.tsx",["37","38"],"/**\n * ---------------------------------------------------------\n *\n * \tThis component is the left side bar that appears on all screens.\n *  It shows icons and is used to navigate.\n *\n * ----------------------------------------------------------\n */\n\nimport React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    title: {\n      color: \"white\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    panelheaderRight: {\n      marginRight: 0,\n      right: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n    },\n    toolbarClass: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n    },\n  })\n);\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbarClass}>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Picture Classification with ml5.js\n          </Typography>\n          <div className={classes.panelheaderRight}>\n            <HelpIcon />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className=\"toolbar\" />\n        <Divider />\n        <List>\n          {[\n            { text: \"Home\", url: \"/\", icon: <HomeIcon /> },\n          ].map((item, index) => (\n            <Link to={item.url} style={{ textDecoration: \"none\" }} key={index}>\n              <ListItem button key={item.text}>\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[{ text: \"Contact\", url: \"/contact\", icon: <MailIcon /> }].map(\n            (item, index) => (\n              <Link\n                to={item.url}\n                style={{ textDecoration: \"none\" }}\n                key={index}\n              >\n                <ListItem button key={item.text}>\n                  <ListItemIcon>{item.icon}</ListItemIcon>\n                  <ListItemText primary={item.text} />\n                </ListItem>\n              </Link>\n            )\n          )}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n",["39","40"],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/VideoComponent.tsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":9,"nodeType":"47","messageId":"48","endLine":12,"endColumn":28},{"ruleId":"45","severity":1,"message":"49","line":23,"column":8,"nodeType":"47","messageId":"48","endLine":23,"endColumn":22},{"ruleId":"45","severity":1,"message":"50","line":24,"column":8,"nodeType":"47","messageId":"48","endLine":24,"endColumn":20},{"ruleId":"41","replacedBy":"51"},{"ruleId":"43","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'PermanentDrawerLeft' is defined but never used.","Identifier","unusedVar","'TrendingUpIcon' is defined but never used.","'VideocamIcon' is defined but never used.",["53"],["54"],"no-global-assign","no-unsafe-negation"]