[{"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/index.tsx":"1","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/reportWebVitals.ts":"2","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/App.tsx":"3","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/ContactPage.tsx":"4","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/panelHomepage/PanelHomepage.tsx":"5","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/PermanentDrawerLeft.tsx":"6","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/VideoComponent.tsx":"7"},{"size":500,"mtime":1643456161794,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1643456161794,"results":"10","hashOfConfig":"9"},{"size":478,"mtime":1643456161789,"results":"11","hashOfConfig":"9"},{"size":987,"mtime":1643456161794,"results":"12","hashOfConfig":"9"},{"size":6157,"mtime":1643464526194,"results":"13","hashOfConfig":"9"},{"size":3804,"mtime":1643456161793,"results":"14","hashOfConfig":"9"},{"size":4863,"mtime":1643465064384,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1r7bmd9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/index.tsx",[],["32","33"],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/reportWebVitals.ts",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/App.tsx",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/ContactPage.tsx",[],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/pages/panelHomepage/PanelHomepage.tsx",["34"],"/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/PermanentDrawerLeft.tsx",["35","36"],"/**\n * ---------------------------------------------------------\n *\n * \tThis component is the left side bar that appears on all screens.\n *  It shows icons and is used to navigate.\n *\n * ----------------------------------------------------------\n */\n\nimport React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    title: {\n      color: \"white\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    panelheaderRight: {\n      marginRight: 0,\n      right: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default,\n      padding: theme.spacing(3),\n    },\n    toolbarClass: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n    },\n  })\n);\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbarClass}>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Picture Classification with ml5.js\n          </Typography>\n          <div className={classes.panelheaderRight}>\n            <HelpIcon />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className=\"toolbar\" />\n        <Divider />\n        <List>\n          {[\n            { text: \"Home\", url: \"/\", icon: <HomeIcon /> },\n          ].map((item, index) => (\n            <Link to={item.url} style={{ textDecoration: \"none\" }} key={index}>\n              <ListItem button key={item.text}>\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[{ text: \"Contact\", url: \"/contact\", icon: <MailIcon /> }].map(\n            (item, index) => (\n              <Link\n                to={item.url}\n                style={{ textDecoration: \"none\" }}\n                key={index}\n              >\n                <ListItem button key={item.text}>\n                  <ListItemIcon>{item.icon}</ListItemIcon>\n                  <ListItemText primary={item.text} />\n                </ListItem>\n              </Link>\n            )\n          )}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","/Users/antonio.dibattista/Projects/Picture-Classification-with-ml5/src/components/VideoComponent.tsx",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":12,"column":9,"nodeType":"44","messageId":"45","endLine":12,"endColumn":28},{"ruleId":"42","severity":1,"message":"46","line":23,"column":8,"nodeType":"44","messageId":"45","endLine":23,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":24,"column":8,"nodeType":"44","messageId":"45","endLine":24,"endColumn":20},{"ruleId":"42","severity":1,"message":"48","line":65,"column":10,"nodeType":"44","messageId":"45","endLine":65,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'PermanentDrawerLeft' is defined but never used.","Identifier","unusedVar","'TrendingUpIcon' is defined but never used.","'VideocamIcon' is defined but never used.","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]